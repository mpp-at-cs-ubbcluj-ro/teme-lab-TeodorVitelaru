plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group = 'ro.mpp2024'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceCompatibility = '22'
targetCompatibility = '22'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainClassName = 'ro.mpp2024.Main'
}

javafx {
    version = '17.0.6'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.swing', 'javafx.media']
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // https://mvnrepository.com/artifact/log4j/log4j
    implementation 'log4j:log4j:1.2.17'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
    implementation 'org.apache.logging.log4j:log4j-core:2.24.3'

    // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
    implementation 'org.apache.logging.log4j:log4j-api:2.24.3'

    implementation group: 'com.google.guava', name: 'guava', version: '31.0.1-jre'

    implementation 'org.xerial:sqlite-jdbc:3.42.0.0'

    //pt javafx
    implementation('org.controlsfx:controlsfx:11.2.1')
    implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('net.synedra:validatorfx:0.5.0') {
        exclude(group: 'org.openjfx')
    }
    implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')
    implementation('org.kordamp.bootstrapfx:bootstrapfx-core:0.4.0')
    implementation('eu.hansolo:tilesfx:21.0.3') {
        exclude(group: 'org.openjfx')
    }
}




jar{
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest{
        attributes 'Main-Class': 'ro.mpp2024.Main'
    }
    from{
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

